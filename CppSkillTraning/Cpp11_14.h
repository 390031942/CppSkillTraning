#pragma once
/*!
 * \file        Cpp11_14.h
 * \author      Timor
 * \date        2020/10/23
 * \description C++ 11/14 标准的 新增加 特性的测试
 * \reference   Book 《Boost程序库揭秘》
 */

/***** 左值 右值*****/

//左值的定义：可以用来存储数据的变量，有实际的内存地址（即变量名），表达式结束后依然存在
//右值的定义：是一个“匿名”的“临时”变量，它在表达式结束时结束生命周期，
//            不能存放数据，可以被修改，也可以不被修改（被const修饰）

void Test_lvalue_rvalue()
{
	int x = 0;     //x 是左值
	int* p = &++x; //可以取地址，++x 是左值
	++x = 10;      //前置++返回的是左值，可以赋值
//	p = &x++;      //后置++返回的是右值，不能取地址或赋值，编译错误。
}

/***** 左值引用 右值引用 *****/

//左值 引用：T&
//右值 引用: T&&,赋予右值“临时的名字”，使得其生命周期延长

void Test_rvalue_reference()
{
	int   x = 0;     //x 是左值
	int&  x1 = x;    //左值引用;
	int&  x2 = ++x;  //左值引用;
//	int&  x3 = x++;  //错误
	int&& x4 = x++;  //右值引用,正确
}